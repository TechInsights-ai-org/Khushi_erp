[
  {
    "name": "Stock Entry Custom Dropdown",
    "dt": "Stock Entry",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Stock Entry', {\r\n    stock_entry_type: function(frm) {\r\n        function set_dropdown(field_name, dropdown_type, warehouse_field){\r\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\r\n                let row = locals[cdt][cdn];\r\n                var filters_value = {};\r\n                filters_value[\"company\"]=frm.doc.company;\r\n                filters_value[\"dropdown_type\"]=dropdown_type;\r\n                filters_value[\"item_code\"]=row.item_code;\r\n                filters_value[\"warehouse\"]=row[warehouse_field];\r\n                return {\r\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\r\n                    filters:filters_value\r\n                }\r\n            }\r\n        }\r\n        let stock_entry_purpose = \"\"\r\n        frappe.db.get_value('Stock Entry Type', frm.doc.stock_entry_type, fieldname = 'purpose', async = false).then(r => {\r\n            stock_entry_purpose = r.message.purpose\r\n            if (stock_entry_purpose === \"Material Issue\") {\r\n                set_dropdown(\"s_warehouse\", \"outward\", \"\")\r\n                set_dropdown(\"rack\", \"outward\", \"s_warehouse\")\r\n                set_dropdown(\"t_warehouse\", \"empty\", \"\")\r\n                set_dropdown(\"to_rack\", \"empty\", \"t_warehouse\")\r\n            } else if (stock_entry_purpose === \"Material Transfer\" || stock_entry_purpose === \"Repack\"  || stock_entry_purpose === \"Send to Subcontractor\" || stock_entry_purpose === \"Material Consumption for Manufacture\" || stock_entry_purpose === \"Disassemble\" || stock_entry_purpose === \"Manufacture\" || stock_entry_purpose === \"Material Transfer for Manufacture\" ) {\r\n                set_dropdown(\"s_warehouse\", \"outward\", \"\")\r\n                set_dropdown(\"rack\", \"outward\", \"s_warehouse\")\r\n                set_dropdown(\"t_warehouse\", \"inward\", \"\")\r\n                set_dropdown(\"to_rack\", \"inward\", \"t_warehouse\")\r\n            }else if(stock_entry_purpose === \"Material Receipt\"){\r\n                set_dropdown(\"s_warehouse\", \"empty\", \"\")\r\n                set_dropdown(\"rack\", \"empty\", \"s_warehouse\")\r\n                set_dropdown(\"t_warehouse\", \"inward\", \"\")\r\n                set_dropdown(\"to_rack\", \"inward\", \"t_warehouse\")\r\n            }\r\n            else{\r\n                set_dropdown(\"s_warehouse\", \"\", \"\")\r\n                set_dropdown(\"rack\", \"\", \"s_warehouse\")\r\n                set_dropdown(\"t_warehouse\", \"\", \"\")\r\n                set_dropdown(\"to_rack\", \"\", \"t_warehouse\")\r\n            }\r\n        })\r\n        \r\n    }\r\n});\r\n",
    "doctype": "Client Script"
  },
  {
    "name": "Delivery Note Custom Dropdown",
    "dt": "Delivery Note",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Delivery Note', {\n\trefresh(frm) {\n        function set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        set_dropdown(\"warehouse\", \"outward\", \"\")\n        set_dropdown(\"rack\", \"outward\", \"warehouse\")\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Purchase Receipt Custom Dropdown",
    "dt": "Purchase Receipt",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t    function set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        set_dropdown(\"warehouse\", \"inward\", \"\")\n        set_dropdown(\"rack\", \"inward\", \"warehouse\")\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Subcontracting Receipt Custom Dropdown",
    "dt": "Subcontracting Receipt",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Subcontracting Receipt', {\n\trefresh(frm) {\n\t\tfunction set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        set_dropdown(\"warehouse\", \"inward\", \"\")\n        set_dropdown(\"rack\", \"inward\", \"warehouse\")\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Sales Invoice Custom Dropdown",
    "dt": "Sales Invoice",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t\tfunction set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        set_dropdown(\"warehouse\", \"outward\", \"\")\n        set_dropdown(\"rack\", \"outward\", \"warehouse\")\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Purchase Invoice Custom Dropdown",
    "dt": "Purchase Invoice",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) {\n\t\tfunction set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        set_dropdown(\"warehouse\", \"inward\", \"\")\n        set_dropdown(\"rack\", \"inward\", \"warehouse\")\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Stock Reconciliation Custom Dropdown",
    "dt": "Stock Reconciliation",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Stock Reconciliation', {\n\tpurpose: function(frm) {\n\t\tfunction set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"items\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        if (frm.doc.purpose === \"Opening Stock\") {\n            set_dropdown(\"warehouse\", \"inward\", \"\")\n            set_dropdown(\"rack\", \"inward\", \"warehouse\")\n        } else if(frm.doc.purpose === \"Stock Reconciliation\"){\n            set_dropdown(\"warehouse\", \"outward\", \"\")\n            set_dropdown(\"rack\", \"outward\", \"warehouse\")\n        }\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Pick List Custom Dropdown",
    "dt": "Pick List",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on('Pick List', {\n\trefresh(frm) {\n\t    function set_dropdown(field_name, dropdown_type, warehouse_field){\n            frm.fields_dict[\"locations\"].grid.get_field(field_name).get_query = function(doc, cdt, cdn) {\n                let row = locals[cdt][cdn];\n                var filters_value = {};\n                filters_value[\"company\"]=frm.doc.company;\n                filters_value[\"dropdown_type\"]=dropdown_type;\n                filters_value[\"item_code\"]=row.item_code;\n                filters_value[\"warehouse\"]=row[warehouse_field];\n                return {\n                    query: 'khushi_erpnext.stock_customization.stock_dropdown_filter.stock_dropdown_filter',\n                    filters:filters_value\n                }\n            }\n        }\n        set_dropdown(\"warehouse\", \"outward\", \"\")\n        set_dropdown(\"rack\", \"outward\", \"warehouse\")\n\t}\n})",
    "doctype": "Client Script"
  },
  {
    "name": "Create Default rack",
    "script_type": "DocType Event",
    "reference_doctype": "Warehouse",
    "event_frequency": "All",
    "doctype_event": "After Insert",
    "allow_guest": 0,
    "module": "Stock customization",
    "disabled": 0,
    "script": "frappe.get_doc({\"doctype\":\"Rack\", \"rack\":doc.name, \"warehouse\":doc.name}).insert()",
    "enable_rate_limit": 0,
    "rate_limit_count": 5,
    "rate_limit_seconds": 86400,
    "doctype": "Server Script"
  },
  {
    "name": "Delete Default rack",
    "script_type": "DocType Event",
    "reference_doctype": "Warehouse",
    "event_frequency": "All",
    "doctype_event": "Before Delete",
    "allow_guest": 0,
    "module": "Stock customization",
    "disabled": 0,
    "script": "frappe.delete_doc(\"Rack\", doc.name)",
    "enable_rate_limit": 0,
    "rate_limit_count": 5,
    "rate_limit_seconds": 86400,
    "doctype": "Server Script"
  },
  {
    "name": "Picklist - Stock Balance Update",
    "dt": "Pick List",
    "view": "Form",
    "module": "Stock customization",
    "enabled": 1,
    "script": "frappe.ui.form.on(\"Pick List Item\", \"rack\", function(frm, cdt, cdn) { \n    let row = locals[cdt][cdn];\n    var filters = {\n                company:frm.doc.company,\n                \"item_code\":row.item_code,\n                \"warehouse\":row.warehouse,\n                \"rack\": row.rack,\n\t\t};\n    frappe.call({\n        method:'khushi_erpnext.stock_customization.stock_dropdown_filter.get_balance', \n        args: {\"doctype\":\"Rack\", \"txt\":\"\", \"filters\":filters},\n\t\tasync: false,\n\t\tcallback: function(r) {\n\t\t    let message = r.message;\n\t\t    frappe.model.set_value(cdt,cdn,'custom_rack_balance', message[0][1]);\n            frm.refresh_field('custom_rack_balance');\n        }\n    })\n});",
    "doctype": "Client Script"
  },
  {
    "name": "Pick List Item-custom_rack_balance",
    "is_system_generated": 0,
    "dt": "Pick List Item",
    "label": "Rack Balance",
    "fieldname": "custom_rack_balance",
    "insert_after": "rack",
    "length": 0,
    "fieldtype": "Int",
    "precision": "",
    "hide_seconds": 0,
    "hide_days": 0,
    "sort_options": 0,
    "fetch_if_empty": 0,
    "collapsible": 0,
    "non_negative": 0,
    "reqd": 0,
    "unique": 0,
    "is_virtual": 0,
    "read_only": 1,
    "ignore_user_permissions": 0,
    "hidden": 1,
    "print_hide": 0,
    "print_hide_if_no_value": 0,
    "no_copy": 0,
    "allow_on_submit": 0,
    "in_list_view": 0,
    "in_standard_filter": 0,
    "in_global_search": 0,
    "in_preview": 0,
    "bold": 0,
    "report_hide": 0,
    "search_index": 0,
    "allow_in_quick_entry": 0,
    "ignore_xss_filter": 0,
    "translatable": 0,
    "hide_border": 0,
    "show_dashboard": 0,
    "permlevel": 0,
    "columns": 0,
    "doctype": "Custom Field"
  }
]